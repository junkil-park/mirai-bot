name: Rust_MIRAI

# Why `on: repository_dispatch`?
#
# If we trigger this action on pull_request events,
# then it will run with the forked repo GITHUB_TOKEN
# this is a problem as it won't allow the action to write
# a comment on the PR in the last step.
#
# instead, we trigger this remotely via a bot we're running ourselves.
on:
  repository_dispatch:
    types: [new_PR]

jobs:
  install_and_run_MIRAI:

    runs-on: ubuntu-latest

    steps:
    - name: Install Z3
      uses: pavpanchekha/setup-z3@v1.2
    - name: Checkout MIRAI
      if: success()
      uses: actions/checkout@v2
      with:
        repository: 'facebookexperimental/MIRAI'
        path: 'MIRAI'
    - name: Install MIRAI
      if: success()
      working-directory: ./MIRAI
      run: |
        set -x
        rustup component add rustc-dev
        RUSTFLAGS='-Clink-arg=-L./binaries -Clink-arg=-lstdc++' cargo install --path ./checker
    - name: Checkout libra
      if: success()
      uses: actions/checkout@v2
      with:
        path: 'libra'
        fetch-depth: 50 # this is to make sure we obtain the target base commit
        repository: ${{ github.event.client_payload.owner }}/${{ github.event.client_payload.repo }} # repo of the forked libra/libra
        ref: ${{ github.event.client_payload.pull_ref }} # commit that triggered the PR
    - name: Build the target to make sure it is clean
      if: success()
      working-directory: ./libra
      run: |
        set -x
        rustup override set `cat ../MIRAI/rust-toolchain`
        rustup component add rustc-dev
        cargo build # twice to get rid of annoying output
        cargo build -q 2>&1 >/dev/null | tee ../cargo_results
        ! test -s ../cargo_results
    - name: Build target base then checkout PR to only run MIRAI on the changes
      if: success()
      working-directory: ./libra
      env:
        BASE: ${{ github.event.client_payload.base_ref }}
      run: |
        set -x
        cargo clean
        git checkout $BASE
        RUSTFLAGS="-Z always_encode_mir" cargo build
        git checkout -
    - name: Run MIRAI on PR
      if: success()
      working-directory: ./libra
      timeout-minutes: 60
      run: RUSTC_WRAPPER=mirai RUSTFLAGS="-Z always_encode_mir" cargo build -q 2>&1 >/dev/null | tee ../mirai_results
    - name: Write comment on PR with MIRAI warnings
      if: success()
      uses: actions/github-script@0.4.0
      env:
        PULL_ID: ${{ github.event.client_payload.pull_id }}
      with:
        github-token: ${{secrets.MIRAI_BOT}}
        script: |
          const fs = require('fs');
          fs.readFile('mirai_results', 'utf-8', (err, data) => {
            if (err) {
              console.log("err:", err);
              return;
            }
            if (data) {
              console.log("MIRAI found warnings on https://github.com/libra/libra/pull/" + process.env.PULL_ID);
              data = `Hello!

          It looks like MIRAI found some warnings:

          \`\`\`
          ${data}
          \`\`\`

          `;
              github.issues.createComment({
                owner: "libra",
                repo: "libra",
                issue_number: process.env.PULL_ID,
                body: data
              });
            }
          });
    - name: This step will fail if MIRAI warnings were found
      if: success()
      run: |
        ! test -s mirai_results
